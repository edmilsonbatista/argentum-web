name: CI + SonarCloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Pega o código
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2️⃣ Setup .NET (ajuste a versão se necessário)
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    # 3️⃣ Restore dependencies
    - name: Restore dependencies
      run: dotnet restore

    # 4️⃣ Build
    - name: Build
      run: dotnet build --configuration Release --no-restore

    # 5️⃣ Run tests com cobertura
    - name: Test with coverage
      run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage"

    # 6️⃣ Prepare SonarCloud analysis
    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    # Para PR info
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      # Seu token SonarCloud
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}# Geralmente https://sonarcloud.io
        SONAR_ORGANIZATION: edmilsonbatista
      with:
        args: |
          -Dsonar.projectKey=argentum-web
          -Dsonar.sources=.
          -Dsonar.tests=tests
          -Dsonar.cs.opencover.reportsPaths=**/TestResults/**/coverage.opencover.xml
          -Dsonar.verbose=true

    # 7️⃣ Publish Quality Gate result
    - name: SonarCloud Quality Gate
      uses: SonarSource/sonarqube-qualitygate-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
